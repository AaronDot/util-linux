#!/bin/bash
#
# Copyright (C) 2024 Masatake YAMATO <yamato@redhat.com>
#
# This file is part of util-linux.
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This file is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
TS_TOPDIR="${0%/*}/../.."
TS_DESC="--hyperlink option"

. "$TS_TOPDIR"/functions.sh
ts_init "$*"

ts_check_test_command "$TS_CMD_LSFD"
ts_check_test_command "$TS_HELPER_MKFDS"
ts_check_test_command "$TS_HELPER_SYSINFO"
ts_check_test_command "$TS_CMD_HEXDUMP"

ts_check_prog "sed"

HOSTNAME=
if ! HOSTNAME=$("$TS_HELPER_SYSINFO" hostname); then
    ts_skip "failed in getting hostname"
fi
HOSTNAME_PATTERN=${HOSTNAME//./\\.}
replace_hostname()
{
    # Make the output host independent: replacing file://foo.example.com/
    # with file:///
    sed -e 's@file://'"${HOSTNAME_PATTERN}"'/@file:///@'
}

ts_cd "$TS_OUTDIR"
PID=
FD=3
EXPR='(FD == '"$FD"')'

ts_init_subtest "regular-file"
{
    coproc MKFDS { "$TS_HELPER_MKFDS" ro-regular-file $FD; }
    if read -r -u "${MKFDS[0]}" PID; then
	for o in NAME KNAME; do
	    echo "# $o"
	    "${TS_CMD_LSFD}" -n --hyperlink=always -o "$o" -p "${PID}" -Q "$EXPR" | replace_hostname | "$TS_CMD_HEXDUMP" -C
	done
	echo DONE >&"${MKFDS[1]}"
    fi
} > "$TS_OUTPUT" 2>&1
wait "${MKFDS_PID}"
ts_finalize_subtest

ts_init_subtest "character-device"
{
    coproc MKFDS { "$TS_HELPER_MKFDS" rw-character-device $FD; }
    if read -r -u "${MKFDS[0]}" PID; then
	for o in NAME KNAME; do
	    echo "# $o"
	    "${TS_CMD_LSFD}" -n --hyperlink=always -o "$o" -p "${PID}" -Q "$EXPR" | replace_hostname | "$TS_CMD_HEXDUMP" -C
	done
	echo DONE >&"${MKFDS[1]}"
    fi
} > "$TS_OUTPUT" 2>&1
wait "${MKFDS_PID}"
ts_finalize_subtest

ts_finalize
